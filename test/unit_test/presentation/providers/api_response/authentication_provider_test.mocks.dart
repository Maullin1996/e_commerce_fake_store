// Mocks generated by Mockito 5.4.5 from annotations
// in fake_store/test/unit_test/presentation/providers/api_response/authentication_provider_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i7;

import 'package:fake_store/domain/services/key_value_storage_service.dart'
    as _i8;
import 'package:fake_store_api_package/errors/index_errors.dart' as _i3;
import 'package:fake_store_api_package/infraestructure/driven-adapter/api/auth_fake_store_api.dart'
    as _i5;
import 'package:fake_store_api_package/infraestructure/helpers/mappers.dart'
    as _i4;
import 'package:http/http.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i6;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeClient_0 extends _i1.SmartFake implements _i2.Client {
  _FakeClient_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeApiErrorHandler_1 extends _i1.SmartFake
    implements _i3.ApiErrorHandler {
  _FakeApiErrorHandler_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTokenFakeStore_2 extends _i1.SmartFake
    implements _i4.TokenFakeStore {
  _FakeTokenFakeStore_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeApiFailure_3 extends _i1.SmartFake implements _i3.ApiFailure {
  _FakeApiFailure_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [AuthFakeStoreApi].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthFakeStoreApi extends _i1.Mock implements _i5.AuthFakeStoreApi {
  MockAuthFakeStoreApi() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get baseUrl => (super.noSuchMethod(
        Invocation.getter(#baseUrl),
        returnValue: _i6.dummyValue<String>(
          this,
          Invocation.getter(#baseUrl),
        ),
      ) as String);

  @override
  _i2.Client get client => (super.noSuchMethod(
        Invocation.getter(#client),
        returnValue: _FakeClient_0(
          this,
          Invocation.getter(#client),
        ),
      ) as _i2.Client);

  @override
  _i3.ApiErrorHandler get errorHandler => (super.noSuchMethod(
        Invocation.getter(#errorHandler),
        returnValue: _FakeApiErrorHandler_1(
          this,
          Invocation.getter(#errorHandler),
        ),
      ) as _i3.ApiErrorHandler);

  @override
  _i7.Future<_i4.TokenFakeStore> authentication({
    required String? username,
    required String? password,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #authentication,
          [],
          {
            #username: username,
            #password: password,
          },
        ),
        returnValue: _i7.Future<_i4.TokenFakeStore>.value(_FakeTokenFakeStore_2(
          this,
          Invocation.method(
            #authentication,
            [],
            {
              #username: username,
              #password: password,
            },
          ),
        )),
      ) as _i7.Future<_i4.TokenFakeStore>);
}

/// A class which mocks [ApiErrorHandler].
///
/// See the documentation for Mockito's code generation for more information.
class MockApiErrorHandler extends _i1.Mock implements _i3.ApiErrorHandler {
  MockApiErrorHandler() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.ApiFailure handle(dynamic error) => (super.noSuchMethod(
        Invocation.method(
          #handle,
          [error],
        ),
        returnValue: _FakeApiFailure_3(
          this,
          Invocation.method(
            #handle,
            [error],
          ),
        ),
      ) as _i3.ApiFailure);
}

/// A class which mocks [KeyValueStorageService].
///
/// See the documentation for Mockito's code generation for more information.
class MockKeyValueStorageService extends _i1.Mock
    implements _i8.KeyValueStorageService {
  MockKeyValueStorageService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<void> setKeyValue<T>(
    String? key,
    T? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setKeyValue,
          [
            key,
            value,
          ],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<T?> getValue<T>(String? key) => (super.noSuchMethod(
        Invocation.method(
          #getValue,
          [key],
        ),
        returnValue: _i7.Future<T?>.value(),
      ) as _i7.Future<T?>);

  @override
  _i7.Future<bool> removeKey(String? key) => (super.noSuchMethod(
        Invocation.method(
          #removeKey,
          [key],
        ),
        returnValue: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);
}

/// A class which mocks [KeyValueStorageService].
///
/// See the documentation for Mockito's code generation for more information.
class GeneratedMockKeyValue extends _i1.Mock
    implements _i8.KeyValueStorageService {
  GeneratedMockKeyValue() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<void> setKeyValue<T>(
    String? key,
    T? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setKeyValue,
          [
            key,
            value,
          ],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<T?> getValue<T>(String? key) => (super.noSuchMethod(
        Invocation.method(
          #getValue,
          [key],
        ),
        returnValue: _i7.Future<T?>.value(),
      ) as _i7.Future<T?>);

  @override
  _i7.Future<bool> removeKey(String? key) => (super.noSuchMethod(
        Invocation.method(
          #removeKey,
          [key],
        ),
        returnValue: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);
}

/// A class which mocks [AuthFakeStoreApi].
///
/// See the documentation for Mockito's code generation for more information.
class GeneratedMockAuthFakeStoreApi extends _i1.Mock
    implements _i5.AuthFakeStoreApi {
  GeneratedMockAuthFakeStoreApi() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get baseUrl => (super.noSuchMethod(
        Invocation.getter(#baseUrl),
        returnValue: _i6.dummyValue<String>(
          this,
          Invocation.getter(#baseUrl),
        ),
      ) as String);

  @override
  _i2.Client get client => (super.noSuchMethod(
        Invocation.getter(#client),
        returnValue: _FakeClient_0(
          this,
          Invocation.getter(#client),
        ),
      ) as _i2.Client);

  @override
  _i3.ApiErrorHandler get errorHandler => (super.noSuchMethod(
        Invocation.getter(#errorHandler),
        returnValue: _FakeApiErrorHandler_1(
          this,
          Invocation.getter(#errorHandler),
        ),
      ) as _i3.ApiErrorHandler);

  @override
  _i7.Future<_i4.TokenFakeStore> authentication({
    required String? username,
    required String? password,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #authentication,
          [],
          {
            #username: username,
            #password: password,
          },
        ),
        returnValue: _i7.Future<_i4.TokenFakeStore>.value(_FakeTokenFakeStore_2(
          this,
          Invocation.method(
            #authentication,
            [],
            {
              #username: username,
              #password: password,
            },
          ),
        )),
      ) as _i7.Future<_i4.TokenFakeStore>);
}

/// A class which mocks [ApiErrorHandler].
///
/// See the documentation for Mockito's code generation for more information.
class GeneratedMockApiErrorHandler extends _i1.Mock
    implements _i3.ApiErrorHandler {
  GeneratedMockApiErrorHandler() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.ApiFailure handle(dynamic error) => (super.noSuchMethod(
        Invocation.method(
          #handle,
          [error],
        ),
        returnValue: _FakeApiFailure_3(
          this,
          Invocation.method(
            #handle,
            [error],
          ),
        ),
      ) as _i3.ApiFailure);
}
